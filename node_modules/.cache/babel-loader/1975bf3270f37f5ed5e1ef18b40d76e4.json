{"ast":null,"code":"import { action_type } from \"../contants/action-types\";\nconst initial = {\n  products: [{}]\n};\nexport const ProductsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case action_type.SET_PRODUCTS:\n      return { ...state,\n        products: payload\n      };\n\n    default:\n      return state;\n  }\n};\n_c = ProductsReducer;\nexport const ProductDetailReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case action_type.SELECTED_PRODUCT:\n      return { ...state,\n        ...payload\n      };\n\n    case action_type.REMOVE_SELECTED_PRODUCT:\n      return {};\n\n    default:\n      return state;\n  }\n};\n_c2 = ProductDetailReducer;\nexport const categoryProduct = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case action_type.CATEGORY:\n      return { ...state,\n        ...payload\n      };\n\n    case action_type.REMOVE_SELECTED_PRODUCT:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const counter = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case action_type.INCREASE:\n      return state + payload;\n\n    case action_type.DECREASE:\n      return state - payload;\n\n    default:\n      return state;\n  }\n};\nconst INITAL_STATE = {\n  Filter: \"\" // name or actors\n\n};\nexport const fetchurl = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case action_type.GETURL:\n      return { ...state,\n        Fipayload\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductsReducer\");\n$RefreshReg$(_c2, \"ProductDetailReducer\");","map":{"version":3,"names":["action_type","initial","products","ProductsReducer","state","type","payload","SET_PRODUCTS","ProductDetailReducer","SELECTED_PRODUCT","REMOVE_SELECTED_PRODUCT","categoryProduct","CATEGORY","counter","INCREASE","DECREASE","INITAL_STATE","Filter","fetchurl","GETURL","Fipayload"],"sources":["/home/chauhoaivu/WEBDEV/redux_base/src/redux/reducer/ProductReducer.js"],"sourcesContent":["import { action_type } from \"../contants/action-types\";\n\nconst initial = {\n  products: [{}],\n};\n\nexport const ProductsReducer = (state = initial, { type, payload }) => {\n  switch (type) {\n    case action_type.SET_PRODUCTS:\n      return { ...state, products: payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const ProductDetailReducer = (state = {}, { type, payload }) => {\n  switch (type) {\n    case action_type.SELECTED_PRODUCT:\n      return { ...state, ...payload };\n\n    case action_type.REMOVE_SELECTED_PRODUCT:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const categoryProduct = (state = {}, { type, payload }) => {\n  switch (type) {\n    case action_type.CATEGORY:\n      return { ...state, ...payload };\n\n    case action_type.REMOVE_SELECTED_PRODUCT:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const counter = (state = 0, { type, payload }) => {\n  switch (type) {\n    case action_type.INCREASE:\n      return state + payload;\n    case action_type.DECREASE:\n      return state - payload;\n\n    default:\n      return state;\n  }\n};\nconst INITAL_STATE = {\n \nFilter: \"\", // name or actors\n\n};\n\nexport const fetchurl = (state = {}, { type, payload }) => {\n  switch (type) {\n    case action_type.GETURL:\n      return { ...state, Fipayload };\n\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,0BAA5B;AAEA,MAAMC,OAAO,GAAG;EACdC,QAAQ,EAAE,CAAC,EAAD;AADI,CAAhB;AAIA,OAAO,MAAMC,eAAe,GAAG,YAAwC;EAAA,IAAvCC,KAAuC,uEAA/BH,OAA+B;EAAA,IAAtB;IAAEI,IAAF;IAAQC;EAAR,CAAsB;;EACrE,QAAQD,IAAR;IACE,KAAKL,WAAW,CAACO,YAAjB;MACE,OAAO,EAAE,GAAGH,KAAL;QAAYF,QAAQ,EAAEI;MAAtB,CAAP;;IAEF;MACE,OAAOF,KAAP;EALJ;AAOD,CARM;KAAMD,e;AAUb,OAAO,MAAMK,oBAAoB,GAAG,YAAmC;EAAA,IAAlCJ,KAAkC,uEAA1B,EAA0B;EAAA,IAAtB;IAAEC,IAAF;IAAQC;EAAR,CAAsB;;EACrE,QAAQD,IAAR;IACE,KAAKL,WAAW,CAACS,gBAAjB;MACE,OAAO,EAAE,GAAGL,KAAL;QAAY,GAAGE;MAAf,CAAP;;IAEF,KAAKN,WAAW,CAACU,uBAAjB;MACE,OAAO,EAAP;;IAEF;MACE,OAAON,KAAP;EARJ;AAUD,CAXM;MAAMI,oB;AAab,OAAO,MAAMG,eAAe,GAAG,YAAmC;EAAA,IAAlCP,KAAkC,uEAA1B,EAA0B;EAAA,IAAtB;IAAEC,IAAF;IAAQC;EAAR,CAAsB;;EAChE,QAAQD,IAAR;IACE,KAAKL,WAAW,CAACY,QAAjB;MACE,OAAO,EAAE,GAAGR,KAAL;QAAY,GAAGE;MAAf,CAAP;;IAEF,KAAKN,WAAW,CAACU,uBAAjB;MACE,OAAO,EAAP;;IAEF;MACE,OAAON,KAAP;EARJ;AAUD,CAXM;AAaP,OAAO,MAAMS,OAAO,GAAG,YAAkC;EAAA,IAAjCT,KAAiC,uEAAzB,CAAyB;EAAA,IAAtB;IAAEC,IAAF;IAAQC;EAAR,CAAsB;;EACvD,QAAQD,IAAR;IACE,KAAKL,WAAW,CAACc,QAAjB;MACE,OAAOV,KAAK,GAAGE,OAAf;;IACF,KAAKN,WAAW,CAACe,QAAjB;MACE,OAAOX,KAAK,GAAGE,OAAf;;IAEF;MACE,OAAOF,KAAP;EAPJ;AASD,CAVM;AAWP,MAAMY,YAAY,GAAG;EAErBC,MAAM,EAAE,EAFa,CAET;;AAFS,CAArB;AAMA,OAAO,MAAMC,QAAQ,GAAG,YAAmC;EAAA,IAAlCd,KAAkC,uEAA1B,EAA0B;EAAA,IAAtB;IAAEC,IAAF;IAAQC;EAAR,CAAsB;;EACzD,QAAQD,IAAR;IACE,KAAKL,WAAW,CAACmB,MAAjB;MACE,OAAO,EAAE,GAAGf,KAAL;QAAYgB;MAAZ,CAAP;;IAEF;MACE,OAAOhB,KAAP;EALJ;AAOD,CARM"},"metadata":{},"sourceType":"module"}